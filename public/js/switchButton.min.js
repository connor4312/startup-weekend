/*! Built 13-10-2013 at #SWPNS */
!function(a,b){a.widget("switchbutton.switchbutton",{options:{classes:"",duration:200,dragThreshold:5,autoResize:!0,labels:!0,checkedLabel:"ON",uncheckedLabel:"OFF",disabledClass:"ui-switchbutton-disabled ui-state-disabled",template:'<div class="ui-switchbutton ui-switchbutton-default ${classes} {{if !labels}}ui-switchbutton-no-labels{{/if}}"><label class="ui-switchbutton-disabled"><span>{{if labels}}${uncheckedLabel}{{/if}}</span></label><label class="ui-switchbutton-enabled"><span>{{if labels}}${checkedLabel}{{/if}}</span></label><div class="ui-switchbutton-handle"></div></div>'},_create:function(){this.element.is(":checkbox")&&(this._wrapCheckboxInContainer(),this._attachEvents(),this._globalEvents(),this._disableTextSelection(),this.element.prop("checked")&&this.$container.toggleClass("ui-state-active",this.element.prop("checked")),this.options.autoResize&&this._autoResize(),this._initialPosition())},_wrapCheckboxInContainer:function(){this.$container=a.tmpl(this.options.template,this.options),this.element.after(this.$container),this.element.remove(),this.$container.append(this.element),this.$disabledLabel=this.$container.children(".ui-switchbutton-disabled"),this.$disabledSpan=this.$disabledLabel.children("span"),this.$enabledLabel=this.$container.children(".ui-switchbutton-enabled"),this.$enabledSpan=this.$enabledLabel.children("span"),this.$handle=this.$container.children(".ui-switchbutton-handle")},_attachEvents:function(){var c=this;this.$container.bind("mousedown touchstart",function(d){if(d.preventDefault(),!c.element.prop("disabled")){var e=d.pageX||d.originalEvent.changedTouches[0].pageX;a[b].currentlyClicking=c.$handle,a[b].dragStartPosition=e,a[b].handleLeftOffset=parseInt(c.$handle.css("left"),10)||0,a[b].dragStartedOn=c.element}}).bind("iPhoneDrag",function(d,e){if(d.preventDefault(),!c.element.prop("disabled")&&c.element==a[b].dragStartedOn){var f=(e+a[b].handleLeftOffset-a[b].dragStartPosition)/c.rightSide;0>f&&(f=0),f>1&&(f=1),c.$handle.css({left:f*c.rightSide}),c.$enabledLabel.css({width:f*c.rightSide}),c.$disabledSpan.css({"margin-right":-f*c.rightSide}),c.$enabledSpan.css({"margin-left":-(1-f)*c.rightSide})}}).bind("iPhoneDragEnd",function(d,e){if(!c.element.prop("disabled")){var f=jQuery.Event("willChange");if(c.element.trigger(f),f.isDefaultPrevented())g=c.element.prop("checked");else{var g;if(a[b].dragging){var h=(e-a[b].dragStartPosition)/c.rightSide;g=0>h?Math.abs(h)<.5:h>=.5}else g=!c.element.prop("checked")}a[b].currentlyClicking=null,a[b].dragging=null,c.element.prop("checked",g),c.$container.toggleClass("ui-state-active",g),c.element.change(),c.element.trigger("didChange")}}),this.element.change(function(){c.refresh();var a=c.element.prop("checked")?c.rightSide:0;c.$handle.animate({left:a},c.options.duration),c.$enabledLabel.animate({width:a},c.options.duration),c.$disabledSpan.animate({"margin-right":-a},c.options.duration),c.$enabledSpan.animate({"margin-left":a-c.rightSide},c.options.duration)})},_globalEvents:function(){if(!a[b].initComplete){var c=this.options;a(document).bind("mousemove touchmove",function(d){if(a[b].currentlyClicking){d.preventDefault();var e=d.pageX||d.originalEvent.changedTouches[0].pageX;!a[b].dragging&&Math.abs(a[b].dragStartPosition-e)>c.dragThreshold&&(a[b].dragging=!0),a(d.target).trigger("iPhoneDrag",[e])}}).bind("mouseup touchend",function(c){if(a[b].currentlyClicking){c.preventDefault();var d=c.pageX||c.originalEvent.changedTouches[0].pageX;a(a[b].currentlyClicking).trigger("iPhoneDragEnd",[d])}})}},_disableTextSelection:function(){a.browser.msie&&a([this.$handle,this.$disabledLabel,this.$enabledLabel,this.$container]).attr("unselectable","on")},_autoResize:function(){var a=this.$enabledLabel.width(),b=this.$disabledLabel.width(),c=this.$disabledSpan.innerWidth()-this.$disabledSpan.width();handleMargins=this.$handle.outerWidth()-this.$handle.innerWidth();var d=handleWidth=a>b?a:b;this.$handle.css({width:handleWidth}),handleWidth=this.$handle.width(),d+=handleWidth+6,spanWidth=d-handleWidth-c-handleMargins,this.$container.css({width:d}),this.$container.find("span").width(spanWidth)},_initialPosition:function(){this.$disabledLabel.css({width:this.$container.width()-5}),this.rightSide=this.$container.width()-this.$handle.outerWidth(),this.element.prop("checked")?(this.$handle.css({left:this.rightSide}),this.$enabledLabel.css({width:this.rightSide}),this.$disabledSpan.css({"margin-right":-this.rightSide})):(this.$enabledLabel.css({width:0}),this.$enabledSpan.css({"margin-left":-this.rightSide})),this.refresh()},enable:function(){return this.element.prop("disabled",!1),this.refresh(),this._setOption("disabled",!1)},disable:function(){return this.element.prop("disabled",!0),this.refresh(),this._setOption("disabled",!0)},widget:function(){return this.$container},refresh:function(){return this.element.prop("disabled")?(this.$container.addClass(this.options.disabledClass),!1):(this.$container.removeClass(this.options.disabledClass),void 0)}})}(jQuery,"switchbutton");